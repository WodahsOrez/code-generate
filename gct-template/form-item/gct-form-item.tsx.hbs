/* eslint-disable vue/no-setup-props-destructure */
import { defineComponent, PropType, ref } from 'vue';
import { useNamespace } from '../../../hooks';
import { IForm{{pascalCase}}, IForm{{pascalCase}}Controller } from '../../../interface';
import './gct-form-{{kebabCase}}.scss';

/**
 * 表单{{chineseText}}
 */
export const GctForm{{pascalCase}} = defineComponent({
  name: 'GctForm{{pascalCase}}',
  props: {
    c: {
      type: Object as PropType<IForm{{pascalCase}}Controller>,
      required: true,
    },
    model: {
      type: Object as PropType<IForm{{pascalCase}}>,
      required: true,
    },
  },
  setup(props) {
    const ns = useNamespace('form-{{kebabCase}}');

    const style: IParams = {};

    if (props.model.width) {
      style[ns.cssVarName('form-{{kebabCase}}-width')] = props.model.width;
    }
    if (props.model.height) {
      style[ns.cssVarName('form-{{kebabCase}}-height')] = props.model.height;
    }

    return { ns, style };
  },
  render() {
    if (this.c.state.keepalive !== true && this.c.state.visible === false) {
      return null;
    }
    const items: any[] = this.$slots.default?.() || [];
    return (
      <div
        class={[this.ns.b(), this.ns.is('hidden', this.c.state.visible === false)]}
        style={this.style}
      >
        {items}
      </div>
    );
  },
});

export default GctForm{{pascalCase}};
